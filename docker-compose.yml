services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${DEV_CONTAINER_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${DEV_PORT}:8000"
    volumes:
      - ./app:/code/app
      - ./logs:/code/logs
      - ./debug:/code/materials
    restart: unless-stopped
    networks:
      - app_network

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: ${DEV_CONTAINER_NAME}_db
    restart: always
    environment:
        - POSTGRES_INITDB_ARGS=--locale=ru_RU.UTF-8
        - LANG=ru_RU.UTF-8
        - LC_ALL=ru_RU.UTF-8
        - TZ=Europe/Moscow
        - POSTGRES_DB=tests_db
    env_file:
        - .env
    volumes:
        - postgres_data:/var/lib/postgresql/data
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} || exit 1" ]
        interval: 10s
        retries: 5
        start_period: 5s

    networks:
        - app_network

volumes:
  postgres_data:

networks:
  app_network:
    name: ${DEV_CONTAINER_NAME}_net

